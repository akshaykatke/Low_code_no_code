/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumFarmRentalFormCaste } from "./EnumFarmRentalFormCaste";
import { IsEnum, IsOptional } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { EnumFarmRentalFormGender } from "./EnumFarmRentalFormGender";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { EnumFarmRentalFormMaritalStatus } from "./EnumFarmRentalFormMaritalStatus";
import { IntFilter } from "../../util/IntFilter";
import { BooleanFilter } from "../../util/BooleanFilter";
import { EnumFarmRentalFormReligion } from "./EnumFarmRentalFormReligion";
import { EnumFarmRentalFormTitle } from "./EnumFarmRentalFormTitle";
import { IntNullableFilter } from "../../util/IntNullableFilter";

@InputType()
class FarmRentalFormWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumFarmRentalFormCaste,
  })
  @IsEnum(EnumFarmRentalFormCaste)
  @IsOptional()
  @Field(() => EnumFarmRentalFormCaste, {
    nullable: true,
  })
  caste?: "Sc" | "St" | "Obc" | "Other" | "General";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  crop?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  currentAddress?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  dateOfBirth?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  district?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  firstNameOfFarmer?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  firstNameOfFather?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  firstNameOfMother?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  fromDate?: DateTimeFilter;

  @ApiProperty({
    required: false,
    enum: EnumFarmRentalFormGender,
  })
  @IsEnum(EnumFarmRentalFormGender)
  @IsOptional()
  @Field(() => EnumFarmRentalFormGender, {
    nullable: true,
  })
  gender?: "Male" | "Female" | "Other";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  landmark?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  lastNameOfFarmer?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  lastNameOfFather?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  lastNameOfMother?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumFarmRentalFormMaritalStatus,
  })
  @IsEnum(EnumFarmRentalFormMaritalStatus)
  @IsOptional()
  @Field(() => EnumFarmRentalFormMaritalStatus, {
    nullable: true,
  })
  maritalStatus?: "Married" | "Unmarried" | "Other";

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  mobileNumber?: IntFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  mobileNumberSameAsWhatsappNumber?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  permanentAddressSameAsCurrentAddress?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  pinCode?: IntFilter;

  @ApiProperty({
    required: false,
    enum: EnumFarmRentalFormReligion,
  })
  @IsEnum(EnumFarmRentalFormReligion)
  @IsOptional()
  @Field(() => EnumFarmRentalFormReligion, {
    nullable: true,
  })
  religion?:
    | "Hindu"
    | "Muslim"
    | "Sikh"
    | "Jain"
    | "Parsi"
    | "Khristian"
    | "Other";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  state?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  tehsil?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumFarmRentalFormTitle,
  })
  @IsEnum(EnumFarmRentalFormTitle)
  @IsOptional()
  @Field(() => EnumFarmRentalFormTitle, {
    nullable: true,
  })
  title?: "Mr" | "Mrs" | "Other";

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  toDate?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  whatsappNumber?: IntNullableFilter;
}

export { FarmRentalFormWhereInput as FarmRentalFormWhereInput };
