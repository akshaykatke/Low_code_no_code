/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumFarmRentalFormCaste } from "./EnumFarmRentalFormCaste";
import {
  IsEnum,
  IsOptional,
  IsString,
  IsDate,
  IsInt,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumFarmRentalFormGender } from "./EnumFarmRentalFormGender";
import { EnumFarmRentalFormMaritalStatus } from "./EnumFarmRentalFormMaritalStatus";
import { EnumFarmRentalFormReligion } from "./EnumFarmRentalFormReligion";
import { EnumFarmRentalFormTitle } from "./EnumFarmRentalFormTitle";

@InputType()
class FarmRentalFormUpdateInput {
  @ApiProperty({
    required: false,
    enum: EnumFarmRentalFormCaste,
  })
  @IsEnum(EnumFarmRentalFormCaste)
  @IsOptional()
  @Field(() => EnumFarmRentalFormCaste, {
    nullable: true,
  })
  caste?: "Sc" | "St" | "Obc" | "Other" | "General";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  crop?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  currentAddress?: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateOfBirth?: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  district?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstNameOfFarmer?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstNameOfFather?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstNameOfMother?: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fromDate?: Date;

  @ApiProperty({
    required: false,
    enum: EnumFarmRentalFormGender,
  })
  @IsEnum(EnumFarmRentalFormGender)
  @IsOptional()
  @Field(() => EnumFarmRentalFormGender, {
    nullable: true,
  })
  gender?: "Male" | "Female" | "Other";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  landmark?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastNameOfFarmer?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastNameOfFather?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastNameOfMother?: string;

  @ApiProperty({
    required: false,
    enum: EnumFarmRentalFormMaritalStatus,
  })
  @IsEnum(EnumFarmRentalFormMaritalStatus)
  @IsOptional()
  @Field(() => EnumFarmRentalFormMaritalStatus, {
    nullable: true,
  })
  maritalStatus?: "Married" | "Unmarried" | "Other";

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  mobileNumber?: number;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  mobileNumberSameAsWhatsappNumber?: boolean;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  permanentAddressSameAsCurrentAddress?: boolean;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  pinCode?: number;

  @ApiProperty({
    required: false,
    enum: EnumFarmRentalFormReligion,
  })
  @IsEnum(EnumFarmRentalFormReligion)
  @IsOptional()
  @Field(() => EnumFarmRentalFormReligion, {
    nullable: true,
  })
  religion?:
    | "Hindu"
    | "Muslim"
    | "Sikh"
    | "Jain"
    | "Parsi"
    | "Khristian"
    | "Other";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  state?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  tehsil?: string;

  @ApiProperty({
    required: false,
    enum: EnumFarmRentalFormTitle,
  })
  @IsEnum(EnumFarmRentalFormTitle)
  @IsOptional()
  @Field(() => EnumFarmRentalFormTitle, {
    nullable: true,
  })
  title?: "Mr" | "Mrs" | "Other";

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  toDate?: Date;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  whatsappNumber?: number | null;
}

export { FarmRentalFormUpdateInput as FarmRentalFormUpdateInput };
